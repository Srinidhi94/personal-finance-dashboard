name: Run Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libmupdf-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-mock coverage
    
    - name: Create test directories
      run: |
        mkdir -p uploads
        mkdir -p tests/data
        mkdir -p tests/test_results
    
    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        FLASK_ENV: testing
      run: |
        python -m pytest tests/ -v --cov=. --cov-report=xml --cov-report=html --cov-report=term-missing
    
    - name: Generate coverage report
      run: |
        coverage report --show-missing > tests/test_results/coverage_report.txt
        echo "## Test Coverage Report" > tests/test_results/coverage_summary.md
        echo "\`\`\`" >> tests/test_results/coverage_summary.md
        coverage report --show-missing >> tests/test_results/coverage_summary.md
        echo "\`\`\`" >> tests/test_results/coverage_summary.md
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          tests/test_results/
          htmlcov/
          coverage.xml
        retention-days: 7
        if-no-files-found: warn

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy pylint
    
    - name: Run Black (code formatting check)
      run: |
        black --check --diff .
    
    - name: Run isort (import sorting check)
      run: |
        isort --check-only --diff .
    
    - name: Run flake8 (style guide enforcement)
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run pylint (code analysis)
      run: |
        pylint --exit-zero --rcfile=.pylintrc *.py parsers/ services.py models.py || true 