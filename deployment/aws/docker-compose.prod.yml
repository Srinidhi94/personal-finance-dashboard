# Production Docker Compose Configuration for AWS EC2
# Optimized for production deployment with security and performance

version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    container_name: finance-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./backups:/var/lib/postgresql/backups
    ports:
      - "127.0.0.1:5432:5432"  # Only localhost access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - finance-network-prod
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Flask Application Service
  app:
    image: ${DOCKER_USERNAME}/personal-finance-dashboard:${IMAGE_TAG:-latest}
    container_name: finance-app-prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:5000"  # Only localhost access
    environment:
      # Flask configuration
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      
      # Database configuration
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - POSTGRES_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      
      # Security configuration
      - DB_ENCRYPTION_KEY=${DB_ENCRYPTION_KEY}
      
      # Feature flags
      - ENABLE_FILE_UPLOAD=true
      - ENABLE_LLM_PARSING=true
      
      # Ollama/LLM configuration
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - LLM_DEFAULT_MODEL=llama2:7b-chat
      - LLM_TIMEOUT=300
      - LLM_MAX_RETRIES=3
      
      # File upload configuration
      - UPLOAD_FOLDER=/app/uploads
      - MAX_CONTENT_LENGTH=33554432
      - MAX_PDF_SIZE=33554432
      - MAX_CSV_SIZE=10485760
      - MAX_EXCEL_SIZE=26214400
      
      # Monitoring and logging
      - LOG_LEVEL=INFO
      - ENABLE_METRICS=true
      
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - upload_data_prod:/app/uploads
      - temp_data_prod:/tmp/finance_processing
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s
    networks:
      - finance-network-prod
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: finance-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - finance-network-prod
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: finance-redis-prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - finance-network-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  postgres_data_prod:
    driver: local
  upload_data_prod:
    driver: local
  temp_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  finance-network-prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
